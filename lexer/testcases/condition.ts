const conditionTestCases = [
  {
    description: "If",
    source: "if (x > 5) {};",
    expect: [
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "identifier", value: "x" },
      { type: "operator", value: ">" },
      { type: "number", value: "5" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "If else",
    source: "if (x > 5) {} else {};",
    expect: [
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "identifier", value: "x" },
      { type: "operator", value: ">" },
      { type: "number", value: "5" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "keyword", value: "else" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "If elseif",
    source: "if (x > 5) {} else if () {};",
    expect: [
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "identifier", value: "x" },
      { type: "operator", value: ">" },
      { type: "number", value: "5" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "keyword", value: "else" },
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "If elseif else",
    source: "if (x > 5) {} else if () {} else {};",
    expect: [
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "identifier", value: "x" },
      { type: "operator", value: ">" },
      { type: "number", value: "5" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "keyword", value: "else" },
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "keyword", value: "else" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "nested if else",
    source: "if (x > 5) { if () {} else if () {} };",
    expect: [
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "identifier", value: "x" },
      { type: "operator", value: ">" },
      { type: "number", value: "5" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "keyword", value: "else" },
      { type: "keyword", value: "if" },
      { type: "punctuation", value: "(" },
      { type: "punctuation", value: ")" },
      { type: "punctuation", value: "{" },
      { type: "punctuation", value: "}" },
      { type: "punctuation", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
];

export { conditionTestCases };
