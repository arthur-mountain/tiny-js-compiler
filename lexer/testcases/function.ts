const functionTestCases = [
  {
    description: "初始化具名函式",
    source: "function test(){};",
    expect: [
      { type: "keyword", value: "function" },
      { type: "name", value: "test" },
      { type: "parenthesis", value: "(" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "初始化具名函式有參數",
    source: "function test(a, b, c, 123, 'str'){};",
    expect: [
      { type: "keyword", value: "function" },
      { type: "name", value: "test" },
      { type: "parenthesis", value: "(" },
      { type: "name", value: "a" },
      { type: "comma", value: "," },
      { type: "name", value: "b" },
      { type: "comma", value: "," },
      { type: "name", value: "c" },
      { type: "comma", value: "," },
      { type: "number", value: "123" },
      { type: "comma", value: "," },
      { type: "string", value: "str" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "初始化具名函式有參數 v2",
    source: "function test([], [1,2,3], {}, { key1: 'value1' }){};",
    expect: [
      { type: "keyword", value: "function" },
      { type: "name", value: "test" },
      { type: "parenthesis", value: "(" },
      { type: "bracket", value: "[" },
      { type: "bracket", value: "]" },
      { type: "comma", value: "," },
      { type: "bracket", value: "[" },
      { type: "number", value: "1" },
      { type: "comma", value: "," },
      { type: "number", value: "2" },
      { type: "comma", value: "," },
      { type: "number", value: "3" },
      { type: "bracket", value: "]" },
      { type: "comma", value: "," },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "comma", value: "," },
      { type: "brace", value: "{" },
      { type: "name", value: "key1" },
      { type: "colon", value: ":" },
      { type: "string", value: "value1" },
      { type: "brace", value: "}" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "初始化函式存在變數中",
    source: "const test = function (){};",
    expect: [
      { type: "keyword", value: "const" },
      { type: "name", value: "test" },
      { type: "operator", value: "=" },
      { type: "keyword", value: "function" },
      { type: "parenthesis", value: "(" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "初始化函式存在變數中",
    source: "const test = function ([], [1,2,3], {}, { key1: 'value1' }){};",
    expect: [
      { type: "keyword", value: "const" },
      { type: "name", value: "test" },
      { type: "operator", value: "=" },
      { type: "keyword", value: "function" },
      { type: "parenthesis", value: "(" },
      { type: "bracket", value: "[" },
      { type: "bracket", value: "]" },
      { type: "comma", value: "," },
      { type: "bracket", value: "[" },
      { type: "number", value: "1" },
      { type: "comma", value: "," },
      { type: "number", value: "2" },
      { type: "comma", value: "," },
      { type: "number", value: "3" },
      { type: "bracket", value: "]" },
      { type: "comma", value: "," },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "comma", value: "," },
      { type: "brace", value: "{" },
      { type: "name", value: "key1" },
      { type: "colon", value: ":" },
      { type: "string", value: "value1" },
      { type: "brace", value: "}" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "初始化非同步函式",
    source: "const test = async function (){};",
    expect: [
      { type: "keyword", value: "const" },
      { type: "name", value: "test" },
      { type: "operator", value: "=" },
      { type: "keyword", value: "async" },
      { type: "keyword", value: "function" },
      { type: "parenthesis", value: "(" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "{" },
      { type: "brace", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
  {
    description: "初始化非同步函式 v2",
    source: "const test = async function () { await test2() };",
    expect: [
      { type: "keyword", value: "const" },
      { type: "name", value: "test" },
      { type: "operator", value: "=" },
      { type: "keyword", value: "async" },
      { type: "keyword", value: "function" },
      { type: "parenthesis", value: "(" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "{" },
      { type: "keyword", value: "await" },
      { type: "name", value: "test2" },
      { type: "parenthesis", value: "(" },
      { type: "parenthesis", value: ")" },
      { type: "brace", value: "}" },
      { type: "punctuation", value: ";" },
    ],
  },
];

export { functionTestCases };
